#
# Copyright 2021 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: dapr-perf

on:
  schedule:
    - cron: '0 */2 * * *'
  repository_dispatch:
    types: [perf-test]
  workflow_dispatch:

env:
  # Version of Go
  GOVER: "1.17"
  # Configure proxy for Go modules
  GOPROXY: https://proxy.golang.org
  # Version of kubectl
  KUBECTLVER: "v1.22.6"
  # If not empty, uses cloud resources for testing
  TEST_CLOUD_ENV: "azure"
  # Version of Helm
  HELMVER: "v3.7.2"
  # Kubernetes namespace to use
  DAPR_NAMESPACE: "dapr-tests"
  # Timeout for tests
  MAX_TEST_TIMEOUT: 5400
  # Space-separated of supported Azure regions: one will be picked randomly for each cluster
  AZURE_REGIONS: "westus3 eastus2 canadacentral"

jobs:
  test-perf:
    name: Perf tests
    runs-on: ubuntu-latest
    env:
      GOOS: linux
      GOARCH: amd64
      AZURE_STORAGE_ACCOUNT: ${{ secrets.PERF_AZURE_STORAGE_ACCOUNT }}
      AZURE_STORAGE_ACCESS_KEY: ${{ secrets.PERF_AZURE_STORAGE_KEY }}
    steps:
      - name: Setup test output
        run: |
          export TEST_OUTPUT_FILE_PREFIX=$GITHUB_WORKSPACE/test_report
          echo "TEST_OUTPUT_FILE_PREFIX=$TEST_OUTPUT_FILE_PREFIX" >> $GITHUB_ENV
      - name: Set up container log path
        run: |
          echo "DAPR_CONTAINER_LOG_PATH=$GITHUB_WORKSPACE/container_logs/perf_tests" >> $GITHUB_ENV
        shell: bash
      - name: Set up for scheduled test
        if: github.event_name != 'repository_dispatch'
        run: |
          echo "CHECKOUT_REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "CHECKOUT_REF=refs/heads/master" >> $GITHUB_ENV
      - name: Parse test payload
        if: github.event_name == 'repository_dispatch'
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{secrets.DAPR_BOT_TOKEN}}
          script: |
            const testPayload = context.payload.client_payload;
            if (testPayload && testPayload.command == "ok-to-perf") {
              var fs = require('fs');
              // Set environment variables
              fs.appendFileSync(process.env.GITHUB_ENV,
                `CHECKOUT_REPO=${testPayload.pull_head_repo}\n`+
                `CHECKOUT_REF=${testPayload.pull_head_ref}`);
            }
      - name: Set up Go ${{ env.GOVER }}
        if: env.CHECKOUT_REPO != ''
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVER }}
      - name: Check out code
        if: env.CHECKOUT_REPO != ''
        uses: actions/checkout@v2
        with:
          repository: ${{ env.CHECKOUT_REPO }}
          ref: ${{ env.CHECKOUT_REF }}
      - name: Cache Go modules (perf)
        if: env.CHECKOUT_REPO != '' && runner.os == 'Linux'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-perf-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-perf-
      - name: Set up Helm ${{ env.HELMVER }}
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELMVER }}
      - name: Login to Azure
        if: env.CHECKOUT_REPO != ''
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: docker login
        if: env.TEST_CLUSTER != ''
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: Build dapr and its docker image
        if: env.TEST_CLUSTER != ''
        run: |
          make build-linux
          make docker-build
      - name: Build perf test apps
        if: env.TEST_CLUSTER != ''
        run: make build-perf-app-all
      - name: Push docker images to test dockerhub
        if: env.TEST_CLUSTER != ''
        run: |
          make docker-push
          make push-perf-app-all
      - name: Preparing ${{ env.TEST_CLUSTER }} cluster for test
        if: env.TEST_CLUSTER != ''
        run: |
          make setup-helm-init
          make setup-test-env
          kubectl get pods -n ${{ env.DAPR_NAMESPACE }}
      - name: Deploy dapr to ${{ env.TEST_CLUSTER }} cluster
        if: env.TEST_CLUSTER != ''
        run: make docker-deploy-k8s
      - name: Deploy test components
        if: env.TEST_CLUSTER != ''
        run: make setup-test-components
      - name: Run Perf test service_invocation_http
        if: env.TEST_CLUSTER != ''
        env:
          DAPR_PERF_QPS: 1000
          DAPR_PERF_CONNECTIONS: 16
          DAPR_TEST_DURATION: 1m
          DAPR_PAYLOAD_SIZE: 1024
        run: make test-perf-service_invocation_http
      - name: Run Perf test actor_timer in Java
        if: env.TEST_CLUSTER != ''
        env:
          DAPR_PERF_QPS: 220
          DAPR_PERF_CONNECTIONS: 10
          DAPR_TEST_DURATION: 1m
          DAPR_PAYLOAD: "{}"
        run: make test-perf-actor_timer
      - name: Run Perf test actor_activation in Java
        if: env.TEST_CLUSTER != ''
        env:
          DAPR_PERF_QPS: 500
          DAPR_PERF_CONNECTIONS: 8
          DAPR_TEST_DURATION: 1m
          DAPR_PAYLOAD: "{}"
        run: make test-perf-actor_activation
      - name: Run Perf test actor reminder registration without SDK
        if: env.TEST_CLUSTER != ''
        env:
          DAPR_PERF_QPS: 500
          DAPR_PERF_CONNECTIONS: 8
          DAPR_TEST_DURATION: 1m
          DAPR_PAYLOAD: "{}"
        run: make test-perf-actor_reminder
      - name: Save control plane logs
        if: always() && env.TEST_CLUSTER != ''
        run: |
          make save-dapr-control-plane-k8s-logs
      - name: Upload container logs
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: perf_container_logs
          path: ${{ env.DAPR_CONTAINER_LOG_PATH }}
      - name: Add test result comment to PR
        if: always() && github.event_name == 'repository_dispatch' && env.TEST_CLUSTER != ''
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{secrets.DAPR_BOT_TOKEN}}
          script: |
            const testPayload = context.payload.client_payload;
            const jobContext = JSON.parse(process.env.JOB_CONTEXT);
            const jobStatus = jobContext.status.toLowerCase();

            console.log(`Current Job Status: ${jobStatus}`);

            var message = "";

            if (jobStatus == "cancelled") {
              message = "Dapr Perf tests cancelled.";
            } else if (jobStatus == "success") {
              message = "All Dapr perf tests completed.";
            } else if (jobStatus == "failure") {
              message = "Dapr Perf tests failed.";
            }

            if (message) {
              await github.issues.createComment({
                owner: testPayload.issue.owner,
                repo: testPayload.issue.repo,
                issue_number: testPayload.issue.number,
                body: message
              });
            }
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@master
        with:
          #TODO: .json suffix can be removed from artifact name after test analytics scripts are updated
          name: test_perf.json
          path: ${{ env.TEST_OUTPUT_FILE_PREFIX }}_perf*.*
